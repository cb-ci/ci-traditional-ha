credentials:
  system:
    domainCredentials:
      - credentials:
          - basicSSHUserPrivateKey:
              description: "ssh-cred"
              id: "ssh-cred"
              privateKeySource:
                directEntry:
                  # THE FOLLOWING IS NOT VERY SECURED, AS LONG AS WE DO SO JUST ON LOCALHOST FOR DEMO PURPOSE IT SHOULD BE OK
                  privateKey: ${readFile:${JENKINS_HOME}/id_rsa}
              scope: GLOBAL
              username: "jenkins"
jenkins:
  authorizationStrategy: "cloudBeesRoleBasedAccessControl"
  clouds:
    - "operationsCenterAgentProvisioningService"
  nodes:
  - permanent:
      labelString: "staticInbound"
      launcher: "inbound"
      name: "staticInboundAgent"
      remoteFS: "/tmp"
      retentionStrategy: "always"
  - permanent:
      labelString: "ssh-agent"
      launcher:
        nioSsh:
          connectionDetails:
            credentialsId: "ssh-cred"
            displayEnvironment: false
            keyVerificationStrategy: "blindlyTrust"
            port: 22
          host: "agent"
      name: "ssh-agent"
      nodeProperties:
      - cloudbeesHighAvailabilityMultipleExecutors:
          numExecutors: 2
      remoteFS: "/tmp"
      retentionStrategy: "cloudbeesHighAvailability"
  numExecutors: 0
security:
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"
  # We allow script approval to print out the Controlelr hostname in our test pipeline
  scriptApproval:
    approvedSignatures:
      - "method java.net.InetAddress getHostName"
      - "staticMethod java.net.InetAddress getLocalHost"
highAvailability:
  highAvailabilityConfiguration:
    developerMode: true
  highAvailabilityQueueThrottler:
    maximumLoad: 0
unclassified:
  audit-trail:
    displayUserName: false
    logBuildCause: true
    logCredentialsUsage: true
    pattern: ".*/(?:configSubmit|doDelete|postBuildResult|enable|disable|cancelQueue|stop|toggleLogKeep|doWipeOutWorkspace|createItem|createView|toggleOffline|cancelQuietDown|quietDown|restart|exit|safeExit)/?.*"
    loggers:
      - console:
          dateFormat: "yyyy-MM-dd HH:mm:ss:SSS"
          logPrefix: "AUDIT - "
          output: STD_OUT
      - logFile:
          # $class: "hudson.plugins.audit_trail.LogFileAuditLogger"
          log: "/var/jenkins_home/audit.log"
          limit: 10240 KB     # Muss gesetzt sein, z.â€¯B. 10 MB = 10240 KB
          count: 5         # Anzahl der Log-Rotationen
          logSeparator: " - "
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
      - simpleBuildDiscarder:
          discarder:
            logRotator:
              artifactNumToKeepStr: "4"
              numToKeepStr: "4"
  headerLabel:
    text: "Managed by CasC"
  location:
    adminAddress: "not configured <nobody@nowhere>"
    url: ${CONTROLLER_URL}
  openTelemetry:
    authentication: "noAuthentication"
    disabledResourceProviders: "io.opentelemetry.instrumentation.resources.ProcessResourceProvider"
    endpoint: "http://otel-collector:4317"
    exportOtelConfigurationAsEnvironmentVariables: true
    ignoredSteps: "dir,echo,isUnix,pwd,properties"
    observabilityBackends:
      - jaeger:
          #jaegerBaseUrl: "http://jaeger:16686/"
          jaegerBaseUrl: ${JAEGER_URL}
    serviceName: "controller-ha"
    serviceNamespace: "controller-ha"
