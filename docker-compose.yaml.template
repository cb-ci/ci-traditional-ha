# Cloudbees CI high availability for traditional platforms demo
# For more details:
# https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional
# https://www.youtube.com/watch?v=Qkf9HaA2wio

# This template will get rendered to docker-compose.yaml by up.sh
# ! Do not modify the generated docker-compose.yaml directly, it wil be overwritten by up.sh. Instead, modify this template and env.sh

version: '3'

services:

  operations-center:
    image: ${DOCKER_IMAGE_OC}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
      - "${CLIENTS_URL}:${HAPROXY_IP}"
    #privileged: true
    #user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50
    environment:
      - JAVA_OPTS=-XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
#    ports:
#    - 8080:8080
#    - 50000:50000
    container_name: operations-center
    volumes:
    - ${OC_PERSISTENCE}:/var/jenkins_home
    networks:
      demo-network:
        ipv4_address: ${OC_IP}
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 1G

  ha-client-controller-1:
    image: ${DOCKER_IMAGE_CLIENT}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
   #privileged: true
   # user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50

    # Required JAVA Options for HA (active/active) 
    # https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional#_java_options
    environment:
# - JAVA_OPTS="-Dcore.casc.config.bundle=/var/jenkins_home/casc-bundle-link.yml"
      - JAVA_OPTS=--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-modules=java.se --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true -DexecutableWar.jetty.disableCustomSessionIdCookieName=true -Dcom.cloudbees.jenkins.ha=false -Dcom.cloudbees.jenkins.replication.warhead.ReplicationServletListener.enabled=true -Djenkins.plugins.git.AbstractGitSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/git -Dorg.jenkinsci.plugins.github_branch_source.GitHubSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/github-branch-source -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
    depends_on:
      operations-center:
        condition: service_healthy
#    ports:
#    - 8081:8080
#    - 50001:50000
    container_name: ha-client-controller-1

    # Controller 1 is mapping the same underlying dir as controller 2. They share the same jenkins_home
    # Cache dir is different for each
    volumes:
    - ${CONTROLLER_PERSISTENCE}:/var/jenkins_home
    - ${CONTROLLER1_CACHES}:/var/cache/cloudbees-core-cm/caches

    networks:
      demo-network:
        ipv4_address: ${CLIENT1_IP}

    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 1G

  ha-client-controller-2:
    image: ${DOCKER_IMAGE_CLIENT}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
   #privileged: true
   # user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50

    # Required JAVA Options for HA (active/active)
    # https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional#_java_options
    environment:
# - JAVA_OPTS="-Dcore.casc.config.bundle=/var/jenkins_home/casc-bundle-link.yml"
      - JAVA_OPTS=--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-modules=java.se --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true -DexecutableWar.jetty.disableCustomSessionIdCookieName=true -Dcom.cloudbees.jenkins.ha=false -Dcom.cloudbees.jenkins.replication.warhead.ReplicationServletListener.enabled=true -Djenkins.plugins.git.AbstractGitSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/git -Dorg.jenkinsci.plugins.github_branch_source.GitHubSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/github-branch-source -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
    depends_on:
      operations-center:
        condition: service_healthy
      ha-client-controller-1:
        condition: service_healthy
#    ports:
#    - 8082:8080
#    - 50002:50000
    container_name: ha-client-controller-2

    # Controller 2 is mapping the same underlying dir as controller 1. They share the same jenkins_home
    # Cache dir is different for each
    volumes:
    - ${CONTROLLER_PERSISTENCE}:/var/jenkins_home
    - ${CONTROLLER2_CACHES}:/var/cache/cloudbees-core-cm/caches

    networks:
      demo-network:
        ipv4_address: ${CLIENT2_IP}

    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 1G


  agent:
    build:
      context: .
      dockerfile: Dockerfile.agent
    #image: jenkins/ssh-agent:jdk11
    privileged: true
    user: root
    container_name: ssh-agent
#    expose:
#      - 22
    volumes:
    - ${AGENT_PERSISTENCE}:/home/jenkins/agent
    networks:
      demo-network:
        ipv4_address: ${AGENT_IP}
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDCsjZisGoSB/00geKfQRRkFvSmOJZnsp5D4x0qSrcUzfcklgQQf5ARADg9FhOVV6C4LkzPIZ1dVy8HKUKLT4KhkTsjPtzj1lJHMulNhc1Kco2VwQi4mVDwQmGqKz7hKjFkfp3hGE76AAhMeHZWqT86VNmAsgTKBd/llNVJ97RIp+bE/9vVF2XtWjjXhx2v3UIh9m2j7y+PNvWiW96bnFkQqvuk/Ig2zVxI2xt/pkelQAgUgOkre7ICJTtJUdKXPQ3pIhPIPhAinRrfl+H3mrHTQgozg91nroT83n2r2lMGCIBV1moVItJH6NMFEwkvW7aDmGLnz0rznGqsGLhOyxSfCaq6rKfFNoSxT03ChAelEpFs3DO2W6jfG8gC/AaYO6spabYEM296ioCH91g9jWsH22o2RUHW5yui9fJP9Gu9zTS8pOuXerGdf2zeFV2ZJHrg2w0f7WP8h62Zet+Zdbm8gxf710n8fvbjqdzsxnYIn+2Cu9zF6R4uuIyuxDd2q60=
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 2G
        reservations:
          cpus: '0.25'
          memory: 100M

  haproxy:
    image: haproxy:alpine
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "80:80"
    networks:
      demo-network:
        ipv4_address: ${HAPROXY_IP}
    depends_on:
      ha-client-controller-1:
        condition: service_healthy
    extra_hosts:
      - "${OC_URL}:${OC_IP}"

  browser:
    image: dorowu/ubuntu-desktop-lxde-vnc
    container_name: vnc-browser
    ports:
      - "6080:80"
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
      - "${CLIENTS_URL}:${HAPROXY_IP}"
    networks:
      demo-network:
        ipv4_address: ${BROWSER_IP}

networks:
  demo-network:
    driver: bridge
    ipam:
      config:
        - subnet: ${IP_PREFIX}.0.0/16
