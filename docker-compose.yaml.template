# Cloudbees CI high availability for traditional platforms demo
# For more details:
# https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional
# https://www.youtube.com/watch?v=Qkf9HaA2wio

# ! Do not modify docker-compose.yaml directly, it wil be overwritten by up.sh. Instead, modify this template and env.sh

version: '3'

services:

  operations-center:
    image: ${DOCKER_IMAGE_OC}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
      - "${CLIENTS_URL}:${HAPROXY_IP}"
    #privileged: true
    #user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50
    environment:
      - JAVA_OPTS=-XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
    ports:
    - 8080:8080
    - 50000:50000
    container_name: operations-center
    volumes:
    - ${OC_PERSISTENCE}:/var/jenkins_home
    networks:
      demo-network:
        ipv4_address: ${OC_IP}

  ha-client-controller-1:
    image: ${DOCKER_IMAGE_CLIENT}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
#      - "${CLIENTS_URL}:${HAPROXY_IP}"
   #privileged: true
   # user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50

    # Required JAVA Options for HA (active/active) 
    # https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional#_java_options
    environment:
      - JAVA_OPTS=--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-modules=java.se --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true -DexecutableWar.jetty.disableCustomSessionIdCookieName=true -Dcom.cloudbees.jenkins.ha=false -Dcom.cloudbees.jenkins.replication.warhead.ReplicationServletListener.enabled=true -Djenkins.plugins.git.AbstractGitSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/git -Dorg.jenkinsci.plugins.github_branch_source.GitHubSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/github-branch-source -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
    depends_on:
      operations-center:
        condition: service_healthy
    ports:
    - 8081:8080
    - 50001:50000
    container_name: ha-client-controller-1

    # Controller 1 is mapping the same underlying dir as controller 2. They share the same jenkins_home
    # Cache dir is different for each
    volumes:
    - ${CONTROLLER_PERSISTENCE}:/var/jenkins_home
    - ${CONTROLLER1_CACHES}:/var/cache/cloudbees-core-cm/caches

    networks:
      demo-network:
        ipv4_address: ${CLIENT1_IP}

  ha-client-controller-2:
    image: ${DOCKER_IMAGE_CLIENT}
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
#      - "${CLIENTS_URL}:${HAPROXY_IP}"
   #privileged: true
   # user: root
    healthcheck:
      test: curl --fail http://localhost:8080/whoAmI/api/json?tree=authenticated || exit 1
      interval: 3s
      timeout: 3s
      retries: 50

    # Required JAVA Options for HA (active/active)
    # https://docs.cloudbees.com/docs/cloudbees-ci/latest/ha-install-guide/specific-ha-installation-traditional#_java_options
    environment:
      - JAVA_OPTS=--add-exports=java.base/jdk.internal.ref=ALL-UNNAMED --add-modules=java.se --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.management/sun.management=ALL-UNNAMED --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true -DexecutableWar.jetty.disableCustomSessionIdCookieName=true -Dcom.cloudbees.jenkins.ha=false -Dcom.cloudbees.jenkins.replication.warhead.ReplicationServletListener.enabled=true -Djenkins.plugins.git.AbstractGitSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/git -Dorg.jenkinsci.plugins.github_branch_source.GitHubSCMSource.cacheRootDir=/var/cache/cloudbees-core-cm/caches/github-branch-source -XX:+AlwaysPreTouch -XX:+UseStringDeduplication -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC
    depends_on:
      operations-center:
        condition: service_healthy
      ha-client-controller-1:
        condition: service_healthy
    ports:
    - 8082:8080
    - 50002:50000
    container_name: ha-client-controller-2

    # Controller 2 is mapping the same underlying dir as controller 1. They share the same jenkins_home
    # Cache dir is different for each
    volumes:
    - ${CONTROLLER_PERSISTENCE}:/var/jenkins_home
    - ${CONTROLLER2_CACHES}:/var/cache/cloudbees-core-cm/caches

    networks:
      demo-network:
        ipv4_address: ${CLIENT2_IP}

#  nginx:
#    image: nginx:alpine
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    ports:
#      - "8085:8085"
   #depends_on:
   #   ha-client-controller-1:
   #     condition: service_healthy
   #   ha-client-controller-2:
   #     condition: service_healthy
   #
   #
  haproxy:
    image: haproxy:alpine
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "80:80"
#    networks:
#      default:
#        ipv4_address: ${HAPROXY_IP}"
    networks:
      demo-network:
        ipv4_address: ${HAPROXY_IP}
    depends_on:
      ha-client-controller-1:
        condition: service_healthy
    extra_hosts:
      - "${OC_URL}:${OC_IP}"
#      - "${CLIENT1_URL}:${CLIENT1_IP}"
#      - "${CLIENT2_URL}:${CLIENT2_IP}"
     #ha-client-controller-2:
        #condition: service_healthy

  browser:
    image: dorowu/ubuntu-desktop-lxde-vnc
    container_name: vnc-browser
    ports:
      - "6080:80"
    extra_hosts:
      - "${OC_URL}:${HAPROXY_IP}"
      - "${CLIENTS_URL}:${HAPROXY_IP}"
    networks:
      demo-network:
        ipv4_address: ${BROWSER_IP}

networks:
  demo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
